async def baggage_price(sess, basket_id, locale, trip_type):
    try:

        json_data = {
            'query': 'mutation CommitBooking($basketId: String!) {\n  commitBooking(basketId: $basketId) {\n    ...BasketCommon\n  }\n}\n\n\nfragment TotalCommon on PriceType {\n  total\n}\n\nfragment PriceCommon on PriceType {\n  amountWithTaxes\n  total\n  discount\n  discountCode\n}\n\nfragment ComponentCommon on ComponentType {\n  id\n  parentId\n  code\n  type\n  quantity\n  removable\n  hidden\n  price {\n    ...PriceCommon\n  }\n}\n\nfragment VariantUnionAddOn on VariantUnionType {\n  ... on AddOn {\n    itemId\n    provider\n    paxNumber\n    pax\n    src\n    start\n    end\n  }\n}\n\nfragment VariantUnionFare on VariantUnionType {\n  ... on Fare {\n    fareOption\n    journeyNumber\n  }\n}\n\nfragment VariantUnionSsr on VariantUnionType {\n  ... on Ssr {\n    journeyNumber\n    paxNumber\n    segmentNumber\n  }\n}\n\nfragment VariantUnionSeat on VariantUnionType {\n  ... on Seat {\n    paxNumber\n    journeyNumber\n    segmentNumber\n    seatType\n    designator\n    childSeatsWithAdult\n    hasAdditionalSeatCost\n    primeIncluded\n  }\n}\n\nfragment VariantUnionBundle on VariantUnionType {\n  ... on Bundle {\n    journeyNumber\n    segmentNumber\n  }\n}\n\nfragment VariantUnionParkingAddOn on VariantUnionType {\n  ... on ParkingAddOn {\n    carParkName\n    itemId\n    provider\n    paxNumber\n    pax\n    src\n    start\n    end\n  }\n}\n\nfragment VariantUnionVoucher on VariantUnionType {\n  ... on Voucher {\n    firstName\n    lastName\n    email\n  }\n}\n\nfragment VariantUnionPhysicalVoucher on VariantUnionType {\n  ... on PhysicalVoucher {\n    sequenceNumber\n    firstName\n    lastName\n    address1\n    address2\n    city\n    postalCode\n    country\n    countryName\n    scheduleDate\n    message\n  }\n}\n\nfragment VariantUnionDigitalVoucher on VariantUnionType {\n  ... on DigitalVoucher {\n    sequenceNumber\n    firstName\n    lastName\n    email\n    theme\n    scheduleDate\n    scheduleTime\n    message\n  }\n}\n\nfragment VariantUnionPhysicalVoucherShippingAddress on VariantUnionType {\n  ... on PhyscialVoucherShippingAddress {\n    address1\n    address2\n    city\n    postalCode\n    country\n    countryName\n    firstName\n    lastName\n  }\n}\n\nfragment VariantUnionChangePaxType on VariantUnionType {\n  ... on ChangePassengerType {\n    passengerNumber\n    invalidJourneys {\n      journeyNumber\n      passengers {\n        passengerNumber\n        passengerType\n      }\n    }\n    mandatorySeatPricesWithoutDiscount {\n      journeyNumber\n      passengerNumber\n      feePriceWithoutDiscount\n      cost\n    }\n  }\n}\n\nfragment VariantUnionAddInfant on VariantUnionType {\n  ... on AddInfant {\n    journeyNumber\n    invalidPassengers {\n      passengerNumber\n      passengerType\n    }\n    segmentNumber\n    paxNumber\n  }\n}\n\nfragment VariantGroundTransfer on VariantUnionType {\n  ... on GroundTransfer {\n    locationPickUp\n    locationDropOff\n    routeType\n    startDate\n    endDate\n    itemId\n    location\n  }\n}\n\nfragment GettingTherePillar on GettingThereType {\n  isPrime\n  price {\n    ...TotalCommon\n  }\n  journeys {\n    ... on JourneyType {\n      arrival\n      departure\n      destination\n      duration\n      fareClass\n      fareKey\n      fareOption\n      flightKey\n      flightNumber\n      isConnecting\n      isDomestic\n      journeyNum\n      origin\n      changeInfo {\n        ... on ChangeInfoType {\n          isChangeable\n          freeMove\n          isChanged\n        }\n      }\n      segments {\n        ... on SegmentType {\n          aircraft\n          arrival\n          departure\n          destination\n          duration\n          hasGovernmentTax\n          flightNumber\n          segmentNum\n          origin\n          originCountry\n          destinationCountry\n        }\n      }\n    }\n  }\n  discounts {\n    ... on DiscountType {\n      amount\n      code\n      journeyNum\n      percentage\n      zone\n      description\n      qty\n    }\n  }\n  taxes {\n    ... on TaxType {\n      amount\n      code\n      journeyNum\n      percentage\n      zone\n    }\n  }\n  vouchers {\n    ... on VoucherType {\n      amount\n      code\n      status\n      accountNumber\n      voucherBasisCode\n    }\n  }\n  components {\n    ... on ComponentType {\n      ...ComponentCommon\n      variant {\n        ...VariantUnionAddOn\n        ...VariantUnionFare\n        ...VariantUnionSsr\n        ...VariantUnionSeat\n        ...VariantGroundTransfer\n        ...VariantUnionBundle\n        ...VariantUnionParkingAddOn\n        ...VariantUnionVoucher\n        ...VariantUnionDigitalVoucher\n        ...VariantUnionPhysicalVoucher\n        ...VariantUnionPhysicalVoucherShippingAddress\n        ...VariantUnionChangePaxType\n        ...VariantUnionAddInfant\n      }\n    }\n  }\n  messages {\n    ... on MessageType {\n      type\n      journeyNum\n      key\n      message\n    }\n  }\n}\n\nfragment PayLaterCommon on PriceType {\n  total\n}\n\nfragment BasketCommon on BasketType {\n  id\n  tripId\n  dotrezSessionId\n  currency\n  gettingThere {\n    ...GettingTherePillar\n  }\n  price {\n    ...TotalCommon\n  }\n  payLater {\n    ...PayLaterCommon\n  }\n  totalToPay\n}\n\n',
            'variables': {
                'basketId': basket_id,
            },
            'operationName': 'CommitBooking',
        }

        TARGET_URL = f"https://www.ryanair.com/api/basketapi/{locale}/graphql"
        encoded_target_url = urllib.parse.quote(TARGET_URL, safe='')
        SCRAPER_URL = f"https://api.scrape.do?token={SCRAPEDO_TOKEN}&forwardHeaders=true&url={encoded_target_url}"        # SCRAPER_URL = f"http://api.scraperapi.com?api_key={SCRAPERAPI_KEY}&keep_headers=true&url={TARGET_URL}"
        async with sess.post(SCRAPER_URL, json=json_data,ssl=False) as resp1:
            res = await resp1.json()
            # print('commit booking',res)
            if resp1.status != 200:
                return None

        json_data = {
            'query': 'query GetBasket($basketId: String!) {\n  basket(id: $basketId) {\n    ...BasketCommon\n    gettingAround {\n      ...GettingAroundPillar\n    }\n  }\n}\n\n\nfragment TotalCommon on PriceType {\n  total\n}\n\nfragment PriceCommon on PriceType {\n  amountWithTaxes\n  total\n  discount\n  discountCode\n}\n\nfragment ComponentCommon on ComponentType {\n  id\n  parentId\n  code\n  type\n  quantity\n  removable\n  hidden\n  price {\n    ...PriceCommon\n  }\n}\n\nfragment VariantUnionAddOn on VariantUnionType {\n  ... on AddOn {\n    itemId\n    provider\n    paxNumber\n    pax\n    src\n    start\n    end\n  }\n}\n\nfragment VariantUnionFare on VariantUnionType {\n  ... on Fare {\n    fareOption\n    journeyNumber\n  }\n}\n\nfragment VariantUnionSsr on VariantUnionType {\n  ... on Ssr {\n    journeyNumber\n    paxNumber\n    segmentNumber\n  }\n}\n\nfragment VariantUnionSeat on VariantUnionType {\n  ... on Seat {\n    paxNumber\n    journeyNumber\n    segmentNumber\n    seatType\n    designator\n    childSeatsWithAdult\n    hasAdditionalSeatCost\n    primeIncluded\n  }\n}\n\nfragment VariantUnionBundle on VariantUnionType {\n  ... on Bundle {\n    journeyNumber\n    segmentNumber\n  }\n}\n\nfragment VariantUnionParkingAddOn on VariantUnionType {\n  ... on ParkingAddOn {\n    carParkName\n    itemId\n    provider\n    paxNumber\n    pax\n    src\n    start\n    end\n  }\n}\n\nfragment VariantUnionVoucher on VariantUnionType {\n  ... on Voucher {\n    firstName\n    lastName\n    email\n  }\n}\n\nfragment VariantUnionPhysicalVoucher on VariantUnionType {\n  ... on PhysicalVoucher {\n    sequenceNumber\n    firstName\n    lastName\n    address1\n    address2\n    city\n    postalCode\n    country\n    countryName\n    scheduleDate\n    message\n  }\n}\n\nfragment VariantUnionDigitalVoucher on VariantUnionType {\n  ... on DigitalVoucher {\n    sequenceNumber\n    firstName\n    lastName\n    email\n    theme\n    scheduleDate\n    scheduleTime\n    message\n  }\n}\n\nfragment VariantUnionPhysicalVoucherShippingAddress on VariantUnionType {\n  ... on PhyscialVoucherShippingAddress {\n    address1\n    address2\n    city\n    postalCode\n    country\n    countryName\n    firstName\n    lastName\n  }\n}\n\nfragment VariantUnionChangePaxType on VariantUnionType {\n  ... on ChangePassengerType {\n    passengerNumber\n    invalidJourneys {\n      journeyNumber\n      passengers {\n        passengerNumber\n        passengerType\n      }\n    }\n    mandatorySeatPricesWithoutDiscount {\n      journeyNumber\n      passengerNumber\n      feePriceWithoutDiscount\n      cost\n    }\n  }\n}\n\nfragment VariantUnionAddInfant on VariantUnionType {\n  ... on AddInfant {\n    journeyNumber\n    invalidPassengers {\n      passengerNumber\n      passengerType\n    }\n    segmentNumber\n    paxNumber\n  }\n}\n\nfragment VariantGroundTransfer on VariantUnionType {\n  ... on GroundTransfer {\n    locationPickUp\n    locationDropOff\n    routeType\n    startDate\n    endDate\n    itemId\n    location\n  }\n}\n\nfragment GettingTherePillar on GettingThereType {\n  isPrime\n  price {\n    ...TotalCommon\n  }\n  journeys {\n    ... on JourneyType {\n      arrival\n      departure\n      destination\n      duration\n      fareClass\n      fareKey\n      fareOption\n      flightKey\n      flightNumber\n      isConnecting\n      isDomestic\n      journeyNum\n      origin\n      changeInfo {\n        ... on ChangeInfoType {\n          isChangeable\n          freeMove\n          isChanged\n        }\n      }\n      segments {\n        ... on SegmentType {\n          aircraft\n          arrival\n          departure\n          destination\n          duration\n          hasGovernmentTax\n          flightNumber\n          segmentNum\n          origin\n          originCountry\n          destinationCountry\n        }\n      }\n    }\n  }\n  discounts {\n    ... on DiscountType {\n      amount\n      code\n      journeyNum\n      percentage\n      zone\n      description\n      qty\n    }\n  }\n  taxes {\n    ... on TaxType {\n      amount\n      code\n      journeyNum\n      percentage\n      zone\n    }\n  }\n  vouchers {\n    ... on VoucherType {\n      amount\n      code\n      status\n      accountNumber\n      voucherBasisCode\n    }\n  }\n  components {\n    ... on ComponentType {\n      ...ComponentCommon\n      variant {\n        ...VariantUnionAddOn\n        ...VariantUnionFare\n        ...VariantUnionSsr\n        ...VariantUnionSeat\n        ...VariantGroundTransfer\n        ...VariantUnionBundle\n        ...VariantUnionParkingAddOn\n        ...VariantUnionVoucher\n        ...VariantUnionDigitalVoucher\n        ...VariantUnionPhysicalVoucher\n        ...VariantUnionPhysicalVoucherShippingAddress\n        ...VariantUnionChangePaxType\n        ...VariantUnionAddInfant\n      }\n    }\n  }\n  messages {\n    ... on MessageType {\n      type\n      journeyNum\n      key\n      message\n    }\n  }\n}\n\nfragment PayLaterCommon on PriceType {\n  total\n}\n\nfragment BasketCommon on BasketType {\n  id\n  tripId\n  dotrezSessionId\n  currency\n  gettingThere {\n    ...GettingTherePillar\n  }\n  price {\n    ...TotalCommon\n  }\n  payLater {\n    ...PayLaterCommon\n  }\n  totalToPay\n}\n\nfragment VariantCar on VariantUnionType {\n  ... on Car {\n    rentPrice\n    carName\n    refId\n    engineLoadId\n    pickUpTime\n    pickUpLocation {\n      countryCode\n      code\n      name\n    }\n    dropOffTime\n    dropOffLocation {\n      countryCode\n      code\n      name\n    }\n    insurance\n    extras {\n      totalPrice\n      includedInRate\n      code\n      price\n      selected\n      type\n    }\n    residence\n    age\n  }\n}\n\nfragment VariantCarRental on VariantUnionType {\n  ... on CarRental {\n    rentPrice\n    carName\n    clientId\n    refId\n    pickUpTime\n    pickUpLocation {\n      countryCode\n      code\n      name\n    }\n    dropOffTime\n    dropOffLocation {\n      countryCode\n      code\n      name\n    }\n    insurance\n    insuranceQuoteReference\n    extras {\n      code\n      includedInRate\n      payNow\n      price\n      selected\n      totalPrice\n      type\n    }\n    residence\n    age\n    language\n    searchId\n    supplier\n  }\n}\n\nfragment GettingAroundPillar on GettingAroundType {\n  price {\n    amount\n    discount\n    amountWithTaxes\n    total\n  }\n  payLater {\n    ...PayLaterCommon\n  }\n  taxes {\n    amount\n  }\n  components {\n    ...ComponentCommon\n    payLater {\n      amountWithTaxes\n      total\n    }\n    variant {\n      ...VariantCar\n      ...VariantCarRental\n      ...VariantGroundTransfer\n    }\n  }\n}\n\n',
            'variables': {
                'basketId': basket_id,
            },
            'operationName': 'GetBasket',
        }
        # ScraperAPI proxy wrapper
        # SCRAPER_URL = f"http://api.scraperapi.com?api_key={SCRAPERAPI_KEY}&keep_headers=true&url={TARGET_URL}"
        # encoded_target_url = urllib.parse.quote(TARGET_URL, safe='')
        # SCRAPER_URL = f"https://api.scrape.do?token={SCRAPEDO_TOKEN}&forwardHeaders=true&url={encoded_target_url}"
        async with sess.post(SCRAPER_URL, json=json_data,ssl=False) as resp2:
            if resp2.status != 200:
                return None
            await resp2.text()

        json_data = {
            'query': 'query Products($basketId: String!, $productQuery: ProductQuery!, $isCheckInFlow: Boolean!) {\n  products(basketId: $basketId, productQuery: $productQuery) {\n    bags: bag {\n      ...BagFrag\n    }\n    equipments: equipment {\n      ...EquipmentFrag\n    }\n    flightExtras: flightExtra {\n      ...ExtraFrag\n    }\n    priorityBoarding {\n      ...PriorityBoardingFrag\n    }\n  }\n  excessBag(basketId: $basketId, isCheckInFlow: $isCheckInFlow) {\n    code\n    price\n    paxType\n    paxNum\n    journeyNum\n    maxPerPassenger\n    maxPerBag\n  }\n}\n\nfragment BagFrag on Bag {\n  journeyNum\n  maxPerPassenger\n  offers {\n    ...BagOfferFrag\n  }\n}\n\nfragment BagOfferFrag on BagOffer {\n  code\n  maxPerPassenger\n  price {\n    ...BagOfferPriceFrag\n  }\n}\n\nfragment BagOfferPriceFrag on BagOfferPrice {\n  discountPercentage\n  discountType\n  originalPrice\n  paxType\n  total\n  totalDiscount\n  strikeThrough\n}\n\nfragment EquipmentFrag on Equipment {\n  journeyNum\n  offers {\n    code\n    type\n    maxPerPassenger\n    availableItems\n    prices {\n      paxType\n      total\n    }\n  }\n}\n\nfragment ExtraFrag on FlightExtra {\n  code\n  discountPercentage\n  discountType\n  maxPerPassenger\n  minOriginalPrice\n  minPrice\n  totalDiscount\n  priceDetails {\n    journeyNumber\n    segmentNumber\n    minPrice\n    minOriginalPrice\n    discountType\n    totalDiscount\n    dsc\n  }\n}\n\nfragment PriorityBoardingFrag on PriorityBoarding {\n  code\n  price\n  paxType\n  journeyNumber\n  segmentNumber\n  strikeThrough\n}\n',
            'variables': {
                'basketId': basket_id,
                'productQuery': {
                    'productTypes': [
                        'PRIOBRDNG',
                        'CBAG',
                        'BAGS',
                        'EQUIPMENT',
                        'BG23',
                    ],
                },
                'isCheckInFlow': False,
            },
        }
        TARGET_URL = f"https://www.ryanair.com/api/catalogapi/{locale}/graphql"
        # SCRAPER_URL = f"http://api.scrape.do/?token=7246ab9c17234777973d6cda857075cdeb5b0a2b5e0&url={TARGET_URL}&super=true"
        # ScraperAPI proxy wrapper
        # SCRAPER_URL = f"http://api.scraperapi.com?api_key={SCRAPERAPI_KEY}&keep_headers=true&url={TARGET_URL}"
        encoded_target_url = urllib.parse.quote(TARGET_URL, safe='')
        SCRAPER_URL = f"https://api.scrape.do?token={SCRAPEDO_TOKEN}&forwardHeaders=true&url={encoded_target_url}"
        async with sess.post(SCRAPER_URL, json=json_data,ssl=False) as resp3:
            data = await resp3.json()

            if resp3.status != 200 or not jmespath.search('data.products.flightExtras',data):
                # print(basket_id)
                # print('catalogapi',data)
                return None


        # print(data)
        additional_luggage = await get_additional_luggage(data, additional_luggage_data, trip_type)
        return additional_luggage if additional_luggage else None
    except Exception as e:
        print('error',e)
        return None

